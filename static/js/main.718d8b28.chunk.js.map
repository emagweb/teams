{"version":3,"sources":["App.js","index.js"],"names":["picuri","iconuri","App","goToTop","window","scrollTo","top","behavior","useState","vacancies","setVacancies","currentPage","setCurrentPage","totalPages","setTotalPages","currentItem","setCurrentItem","isShow","setIsShow","isPersonShow","setIsPersonShow","fetchVacancies","dispatch","axios","get","then","res","data","results","useEffect","getVacancies","total_pages","current_page","className","map","item","index","onClick","id","position","length","slice","src","business_area","alt","general_experience","salary","technologies","summary","elements","i","push","getFirst","getPages","getLast","filter","filteredItem","ClassName","style","margin","display","width","backgroundColor","color","border","href","target","rel","work_experience","timeline","begin","end","description","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGMA,EAAS,wCAETC,EAAU,kCAkRDC,EAhRH,WAEV,IAAMC,EAAU,WACdC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,YAId,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAAsCN,oBAAU,GAAhD,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAwCV,oBAAS,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAiGA,SAASC,IACP,OAAO,SAAUC,GACfA,EAASb,KACTc,IAAMC,IAAN,sEAAyEb,IACtEc,MAAK,SAACC,GACLJ,EAASI,EAAIC,KAAKC,SAClBlB,EAAagB,EAAIC,KAAKC,aAgB9B,OAXAC,qBAAU,WACR,IAAMC,EAAY,iDAAG,8GACDP,IAAMC,IAAN,sEAAyEb,IADxE,OACbe,EADa,OAEnBhB,EAAagB,EAAIC,KAAKC,SACtBd,EAAcY,EAAIC,KAAKI,aACvBnB,EAAec,EAAIC,KAAKK,cAJL,2CAAH,qDAMlBF,MACC,CAACnB,IAIF,yBAASsB,UAAU,aAAnB,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SACGhB,EAASR,EAAUyB,KAAI,SAACC,EAAMC,GAAP,OACtB,sBACEH,UAAU,UAEVI,QAAS,WACPrB,EAAemB,EAAKG,IACpBpB,GAAWD,GACXG,GAAiBD,IANrB,UAQE,gCACE,oBAAIc,UAAU,gBAAd,SAA+BE,EAAKI,SAASC,OAAS,GAAKL,EAAKI,SAASE,MAAM,EAAG,IAAM,OAASN,EAAKI,WACtG,sBAAKN,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAWS,IAAK1C,GAAWmC,EAAKQ,cAAc,GAAkBR,EAAKQ,cAAlB,YAAmC,OAAQC,IAAKT,EAAKQ,gBACvH,sBAAKV,UAAU,aAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BE,EAAKU,mBAAqB,WACpD,oBAAGZ,UAAU,SAAb,cAAwBE,EAAKW,OAA7B,iBAGJ,sBAAKb,UAAU,eAAf,UACE,oBAAIA,UAAU,OAAd,uBACA,mBAAGA,UAAU,YAAb,SACE,qBAAKS,IAAKzC,EAAUkC,EAAKY,aAAaN,MAAM,EAAG,GAAIR,UAAU,aAAaW,IAAK,mBAIrF,8BACE,qBAAKX,UAAU,eAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BE,EAAKa,gBAxB9BZ,MA4BJ,+BAENnB,EACE,sBAAKgB,UAAU,6BAAf,UACC,wBACEA,UAAWtB,EAAc,EAAI,OAAS,gBACtC0B,QAAS,kBAAM1B,EAAc,GAC1BC,EAAeD,EAAc,GAC5BU,IAAkBlB,KAAaS,EAAeD,IAJpD,kBA5JO,WACf,IAAMsC,EAAW,GACjB,GAAItC,GAAe,EACjB,IADqB,IAAD,WACXuC,GACPD,EAASE,KACP,sBAAMlB,UAAU,UAAhB,SACE,wBAEEA,UAAWtB,IAAgBuC,EAAI,GAAK,WACpCb,QAAS,kBAAM1B,IAAgBuC,GAC5BtC,EAAesC,GACd7B,IAAkBlB,KAAaS,EAAeD,IALpD,SAMKuC,EAAI,GAAJ,WAAaA,GAAMA,GALjBA,OAJJA,EAAI,EAAGA,GAAK,EAAGA,IAAM,EAArBA,GAeX,GAAIvC,EAAc,GAAKA,EAAcE,EAAa,EAChD,IADoD,IAAD,WAC1CqC,GACPD,EAASE,KACP,sBAAMlB,UAAU,UAAhB,SACE,wBAEEA,UAAWtB,IAAgBuC,EAAI,GAAK,WACpCb,QAAS,kBAAM1B,IAAgBuC,GAC5BtC,EAAesC,GACd7B,IAAkBlB,KAAaS,EAAeD,IALpD,SAMKuC,EAAI,GAAJ,WAAaA,GAAMA,GALjBA,OAJJA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAeX,OAAOD,EAgIEG,GACAzC,EAAc,EAAI,wBAAQsB,UAAW,OAAnB,iBAA0C,6BA9HtD,WACf,IAAMgB,EAAW,GAEjB,GAAItC,EAAc,GAAKA,EAAcE,EAAa,EAChD,IADoD,IAAD,WAC1CqC,GACPD,EAASE,KACP,sBAAMlB,UAAU,UAAhB,SACE,wBAEEA,UAAWtB,IAAgBuC,EAAI,GAAK,WACpCb,QAAS,kBAAM1B,IAAgBuC,GAC5BtC,EAAesC,GACd7B,IAAkBlB,KAAaS,EAAeD,IALpD,SAMKuC,EAAI,GAAJ,WAAaA,GAAMA,GALjBA,OAJJA,EAAIvC,EAAc,EAAGuC,EAAIvC,EAAc,EAAGuC,IAAM,EAAhDA,QAeT,GAAIvC,EAAcE,EAAa,EAC7B,IADiC,IAAD,WACvBqC,GACPD,EAASE,KACP,sBAAMlB,UAAU,UAAhB,SACE,wBAEEA,UAAWtB,IAAgBuC,EAAI,GAAK,WACpCb,QAAS,kBAAM1B,IAAgBuC,GAC5BtC,EAAesC,GACd7B,IAAkBlB,KAAaS,EAAeD,IALpD,SAMKuC,EAAI,GAAJ,WAAaA,GAAMA,GALjBA,OAJJA,EAAIrC,EAAa,EAAGqC,EAAIrC,EAAa,EAAGqC,IAAM,EAA9CA,GAgBb,OAAOD,EA2FEI,GACA1C,EAAcE,EAAa,EAAI,wBAAQoB,UAAW,OAAnB,iBAA0C,6BAzFpE,WAEd,IADA,IAAMgB,EAAW,GADG,WAEXC,GACPD,EAASE,KACP,sBAAMlB,UAAU,UAAhB,SACE,wBAEEA,UAAWtB,IAAgBuC,EAAI,GAAK,WACpCb,QAAS,kBAAM1B,IAAgBuC,GAC5BtC,EAAesC,GACd7B,IAAkBlB,KAAaS,EAAeD,IALpD,SAMKuC,EAAI,GAAJ,WAAaA,GAAMA,GALjBA,OAJJA,EAAIrC,EAAa,EAAGqC,GAAKrC,EAAYqC,IAAM,EAA3CA,GAcT,OAAOD,EA0EEK,GACD,wBACErB,UAAWtB,EAAcE,EAAa,OAAS,gBAC/CwB,QAAS,kBAAM1B,EAAcE,GAC1BD,EAAeD,EAAc,GAC5BU,IAAkBlB,KAAaS,EAAeD,IAJpD,qBAMQ,6BAGXQ,EAAeV,EAAU8C,QAAO,SAAApB,GAAI,OAAIA,EAAKG,KAAOvB,KAAamB,KAAI,SAAAsB,GAAY,OAChF,sBAAKvB,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCuB,EAAajB,WAC7C,sBAAKN,UAAU,eAAf,UACE,qBACEA,UAAU,eACVS,IAAK1C,GAAWwD,EAAab,cAAc,GAAkBa,EAAab,cAA1B,YAA2C,OAC3FC,IAAKY,EAAab,gBAEpB,sBAAKV,UAAU,iBAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8BuB,EAAaR,UAE3C,sBAAKS,UAAU,WAAWC,MAAO,CAAEC,OAAQ,eAAgBC,QAAS,OAAQC,MAAO,QAAnF,UACE,wBACEH,MAAO,CAAEG,MAAO,IAAKF,OAAQ,EAAGG,gBAAiB,UAAWC,MAAO,OAAQC,OAAQ,gCACnF3B,QAAS,WACPnB,GAAU,GACVE,GAAgB,IAJpB,mCASA,mBAAGa,UAAU,cACXyB,MAAO,CAAEG,MAAO,IAAKF,OAAQ,SAAUI,MAAO,WAAaE,KAAK,yCAAyCC,OAAO,SAASC,IAAI,aAD/H,wCAKN,sBAAKlC,UAAU,mBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,yCACA,2CACA,0CAEF,sBAAKA,UAAU,gBAAf,UACE,4BAAIuB,EAAab,gBACjB,4BAAIa,EAAaX,mBAAqB,WACtC,kCAAKW,EAAaV,OAAlB,iBAGJ,qBAAKb,UAAU,oBAAf,SACE,gCACE,oBAAIA,UAAU,gBAAd,8BACA,qBAAKS,IAAKzC,EAAUuD,EAAaT,aAAe,aAAcd,UAAU,aAAaW,IAAK,mBAIhG,sBAAKX,UAAU,WAAf,UACE,oBAAIA,UAAU,gBAAd,6BAEEuB,EAAaY,gBAAgBlC,KAAI,SAACmC,EAAUjC,GAAX,OAC/B,sBAAKH,UAAU,eAAf,UACE,qBAAIA,UAAU,gBAAd,UAA8B,+BAAOoC,EAASC,QAA9C,MAA8D,+BAAOD,EAASE,SAC9E,sBAAKtC,UAAU,mBAAf,UACE,oBAAIA,UAAU,iBAAd,SAA+B,sBAAMyB,MAAO,CAAEK,MAAO,QAAtB,SAAiCM,EAAS9B,aACzE,mBAAGN,UAAU,gBAAb,SAA8BoC,EAASG,mBAJRpC,SAUzC,sBAAKH,UAAU,cAAcyB,MAAO,CAAEe,UAAW,IAAjD,UACE,wBACExC,UAAU,oBACVI,QAAS,WACPnB,GAAU,GACVE,GAAgB,IAJpB,mCAOA,mBAAGa,UAAU,oBAAoBgC,KAAK,yCAAyCC,OAAO,SAASC,IAAI,aAAnG,wCAGD,mCC3QbO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.718d8b28.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst picuri = 'https://emagweb.github.io/sdev/icons/'\n\nconst iconuri = 'https://skillicons.dev/icons?i='\n\nconst App = () => {\n\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n  }\n\n  const [vacancies, setVacancies] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n\n  const [currentItem, setCurrentItem] = useState(-1)\n  const [isShow, setIsShow] = useState(true)\n  const [isPersonShow, setIsPersonShow] = useState(false)\n\n  const getFirst = () => {\n    const elements = []\n    if (currentPage <= 3) {\n      for (let i = 1; i <= 3; i++) {\n        elements.push(\n          <span className=\"v-pages\">\n            <button\n              key={i}\n              className={currentPage !== i ? '' : 'noactive'}\n              onClick={() => currentPage !== i ?\n                (setCurrentPage(i),\n                  fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n              }>{i < 10 ? `0${i}` : i}\n            </button>\n          </span>\n        )\n      }\n    }\n    if (currentPage > 3 && currentPage < totalPages - 1) {\n      for (let i = 1; i < 3; i++) {\n        elements.push(\n          <span className=\"v-pages\">\n            <button\n              key={i}\n              className={currentPage !== i ? '' : 'noactive'}\n              onClick={() => currentPage !== i ?\n                (setCurrentPage(i),\n                  fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n              }>{i < 10 ? `0${i}` : i}\n            </button>\n          </span>\n        )\n      }\n    }\n    return elements\n  };\n\n  const getPages = () => {\n    const elements = []\n\n    if (currentPage > 3 && currentPage < totalPages - 1) {\n      for (let i = currentPage - 1; i < currentPage + 2; i++) {\n        elements.push(\n          <span className=\"v-pages\">\n            <button\n              key={i}\n              className={currentPage !== i ? '' : 'noactive'}\n              onClick={() => currentPage !== i ?\n                (setCurrentPage(i),\n                  fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n              }>{i < 10 ? `0${i}` : i}\n            </button>\n          </span>\n        )\n      }\n    } else {\n      if (currentPage > totalPages - 3) {\n        for (let i = totalPages - 3; i < totalPages - 1; i++) {\n          elements.push(\n            <span className=\"v-pages\">\n              <button\n                key={i}\n                className={currentPage !== i ? '' : 'noactive'}\n                onClick={() => currentPage !== i ?\n                  (setCurrentPage(i),\n                    fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n                }>{i < 10 ? `0${i}` : i}\n              </button>\n            </span>\n          )\n        }\n      }\n    }\n    return elements\n  };\n\n  const getLast = () => {\n    const elements = []\n    for (let i = totalPages - 1; i <= totalPages; i++) {\n      elements.push(\n        <span className=\"v-pages\">\n          <button\n            key={i}\n            className={currentPage !== i ? '' : 'noactive'}\n            onClick={() => currentPage !== i ?\n              (setCurrentPage(i),\n                fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n            }>{i < 10 ? `0${i}` : i}\n          </button>\n        </span>\n      )\n    }\n    return elements\n  };\n\n  function fetchVacancies() {\n    return function (dispatch) {\n      dispatch(vacancies())\n      axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n        .then((res) => {\n          dispatch(res.data.results)\n          setVacancies(res.data.results)\n        })\n    }\n  }\n\n  useEffect(() => {\n    const getVacancies = async () => {\n      const res = await axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n      setVacancies(res.data.results)\n      setTotalPages(res.data.total_pages)\n      setCurrentPage(res.data.current_page)\n    }\n    getVacancies()\n  }, [currentPage])\n\n\n  return (\n    <section className=\"page cards\">\n      <div className=\"features\">\n        <div className=\"feature-row\">\n          {isShow ? vacancies.map((item, index) => (\n            <div\n              className=\"feature\"\n              key={index}\n              onClick={() => {\n                setCurrentItem(item.id)\n                setIsShow(!isShow)\n                setIsPersonShow(!isPersonShow)\n              }}>\n              <div>\n                <h3 className=\"feature-title\">{item.position.length > 21 ? item.position.slice(0, 21) + ' ...' : item.position}</h3>\n                <div className=\"flex-row\">\n                  <img className=\"flex-pic\" src={picuri + (!item.business_area[0] ? 'software' : item.business_area) + '.svg'} alt={item.business_area} />\n                  <div className=\"flex-right\">\n                    <p className=\"bg-yellow\">{item.general_experience + ' years'}</p>\n                    <p className=\"salary\">${item.salary}/hour</p>\n                  </div>\n                </div>\n                <div className=\"skills-icons\">\n                  <h3 className=\"dark\">Expert In</h3>\n                  <p className=\"skillsets\">\n                    <img src={iconuri + item.technologies.slice(0, 6)} className=\"skill-icon\" alt={'skills'} />\n                  </p>\n                </div>\n              </div>\n              <div>\n                <div className=\"feature-desc\">\n                  <p className=\"dark m-20\">{item.summary}</p>\n                </div>\n              </div>\n            </div>\n          )) : <></>}\n        </div>\n        {isShow ?\n          (<div className='flex-center pagination-nav'>\n            <button\n              className={currentPage > 1 ? 'navs' : 'noactive navs'}\n              onClick={() => currentPage > 1 ?\n                (setCurrentPage(currentPage - 1),\n                  fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n              }>Prev</button>\n            {getFirst()}\n            {currentPage > 4 ? <button className={'dots'}>...</button> : <></>}\n            {getPages()}\n            {currentPage < totalPages - 3 ? <button className={'dots'}>...</button> : <></>}\n            {getLast()}\n            <button\n              className={currentPage < totalPages ? 'navs' : 'noactive navs'}\n              onClick={() => currentPage < totalPages ?\n                (setCurrentPage(currentPage + 1),\n                  fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n              }>Next</button>\n          </div>) : <></>\n        }\n\n        {isPersonShow ? vacancies.filter(item => item.id === currentItem).map(filteredItem => (\n          <div className=\"features\">\n            <h3 className=\"single_v_title\">{filteredItem.position}</h3>\n            <div className=\"single_v_row\">\n              <img\n                className=\"single_v_pic\"\n                src={picuri + (!filteredItem.business_area[0] ? 'software' : filteredItem.business_area) + '.svg'}\n                alt={filteredItem.business_area}\n              />\n              <div className=\"single_v_right\">\n                <p className=\"single_v_text\">{filteredItem.summary}</p>\n\n                <div ClassName=\"wide-btn\" style={{ margin: '-10px 0 30px', display: 'flex', width: '100%' }}>\n                  <button\n                    style={{ width: 280, margin: 0, backgroundColor: '#1C253D', color: '#fff', border: '2px solid #1C253D !important' }}\n                    onClick={() => {\n                      setIsShow(true)\n                      setIsPersonShow(false)\n                    }\n                    }>\n                    Back to find employee\n                  </button>\n                  <a className=\"button-dark\"\n                    style={{ width: 200, margin: '0 25px', color: '#E4C417' }} href=\"https://upcod.typeform.com/to/BqR60b20\" target=\"_blank\" rel=\"noreferrer\">Get this employee</a>\n                </div>\n              </div>\n            </div>\n            <div className='vacancy-overview'>\n              <div className=\"vacancy-box blue\">\n                <div className=\"vacancy-left\">\n                  <p>Category</p>\n                  <p>Experience</p>\n                  <p>Salary</p>\n                </div>\n                <div className=\"vacancy-right\">\n                  <p>{filteredItem.business_area}</p>\n                  <p>{filteredItem.general_experience + ' years'}</p>\n                  <p>${filteredItem.salary}/hour</p>\n                </div>\n              </div>\n              <div className=\"vacancy-box white\">\n                <div>\n                  <h3 className=\"vacancy-title\">Use technologies</h3>\n                  <img src={iconuri + filteredItem.technologies + '&perline=6'} className=\"skill-icon\" alt={'skills'} />\n                </div>\n              </div>\n            </div>\n            <div className=\"timeline\">\n              <h3 className=\"timeline-name\">Work Experience</h3>\n              {\n                filteredItem.work_experience.map((timeline, index) => (\n                  <div className='timeline-row' key={index}>\n                    <h4 className='timeline-date'><span>{timeline.begin}</span> - <span>{timeline.end}</span></h4>\n                    <div className='timeline-content'>\n                      <h4 className='timeline-title'><span style={{ color: '#fff' }}>{timeline.position}</span></h4>\n                      <p className='timeline-text'>{timeline.description}</p>\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n            <div className=\"flex-center\" style={{ marginTop: 80 }}>\n              <button\n                className=\"button-get yellow\"\n                onClick={() => {\n                  setIsShow(true)\n                  setIsPersonShow(false)\n                }\n                }>Back to find employee</button>\n              <a className=\"button-get yellow\" href=\"https://upcod.typeform.com/to/BqR60b20\" target=\"_blank\" rel=\"noreferrer\">Get this employee</a>\n            </div>\n          </div>\n        )) : <></>\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}