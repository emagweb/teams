{"version":3,"sources":["App.js","index.js"],"names":["picuri","iconuri","App","goToTop","window","scrollTo","top","behavior","useState","vacancies","setVacancies","currentPage","setCurrentPage","totalPages","setTotalPages","currentItem","setCurrentItem","isShow","setIsShow","isPersonShow","setIsPersonShow","fetchVacancies","dispatch","axios","get","then","res","data","results","useEffect","getVacancies","total_pages","current_page","className","map","item","index","onClick","id","position","length","slice","src","business_area","alt","general_experience","salary","technologies","summary","elements","i","push","getPages","filter","filteredItem","work_experience","timeline","begin","end","style","color","description","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d715b11.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst picuri = 'https://emagweb.github.io/sdev/icons/'\n\nconst iconuri = 'https://skillicons.dev/icons?i='\n\nconst App = () => {\n\n  const goToTop = () => {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth',\n\t\t})\n\t}\n\n  const [vacancies, setVacancies] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n  const [currentItem, setCurrentItem] = useState(-1)\n  const [isShow, setIsShow] = useState(true)\n  const [isPersonShow, setIsPersonShow] = useState(false)\n\n  const getPages = () => {\n    const elements = []\n    for (let i = 1; i <= totalPages; i++) {\n      elements.push(\n         <span className=\"v-pages\"><button\n            key={i}\n            className={currentPage !== i ? '' : 'noactive'}\n            onClick={() => currentPage !== i ? \n            (setCurrentPage(i), \n            fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n          }>{i < 10 ? `0${i}` : i}</button></span>\n      )\n    }\n    return elements\n  };\n\n  function fetchVacancies() {\n    return function(dispatch) {\n      dispatch(vacancies())\n      axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n        .then((res) => {\n          dispatch(res.data.results)\n          setVacancies(res.data.results)\n        })\n    }\n  }\n\n\n\n  useEffect (() => {    \n    const getVacancies = async () => {\n      const res = await axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n      setVacancies(res.data.results)\n      setTotalPages(res.data.total_pages)\n      setCurrentPage(res.data.current_page)\n    }\n    getVacancies()\n  }, [currentPage])\n\n\n  return (\n    <section className=\"page\">\n      <div className=\"features\">\n        <div className=\"feature-row\">\n          {isShow ? vacancies.map((item, index) =>  (\n            <div \n              className=\"feature\" \n              key={index} \n              onClick={() => {\n                setCurrentItem(item.id)\n                setIsShow(!isShow)\n                setIsPersonShow(!isPersonShow)\n              }}>\n              <div>\n                <h3 className=\"feature-title\">{item.position.length > 21 ? item.position.slice(0,21) + ' ...' : item.position }</h3>\n                <div className=\"flex-row\">\n                  <img className=\"flex-pic\" src={picuri + (!item.business_area[0] ? 'software' : item.business_area) + '.svg'} alt={item.business_area} />\n                  <div className=\"flex-right\">\n                    <p className=\"bg-yellow\">{item.general_experience + ' years'}</p>\n                    <p className=\"salary\">${item.salary}/hour</p>\n                  </div>\n                </div>\n                <div className=\"skills-icons\">\n                  <h3 className=\"dark\">Expert In</h3>\n                  <p className=\"skillsets\">\n                    <img src={iconuri + item.technologies.slice(0,6)} className=\"skill-icon\" alt={'skills'} />\n                  </p>\n                </div>\n              </div>\n              <div>\n                <div className=\"feature-desc\">\n                  <p className=\"dark m-20\">{item.summary}</p>\n                </div>\n              </div>\n            </div>\n          )) : <></>}\n        </div>\n        {isShow ? \n          (<div className='flex-center'>\n            <button  \n              className={currentPage > 1 ? '' : 'noactive'}\n              onClick={() => currentPage > 1 ? \n              (setCurrentPage(currentPage - 1), \n              fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n            }>Prev</button>\n            {getPages()}\n            <button \n              className={currentPage < totalPages ? '' : 'noactive'}\n              onClick={() => currentPage < totalPages ?\n              (setCurrentPage(currentPage + 1),\n              fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n            }>Next</button>\n          </div>) : <></>\n        }\n\n        { isPersonShow ? vacancies.filter(item => item.id === currentItem).map(filteredItem => (\n            <div className=\"features\">\n              <h3 className=\"single_v_title\">{filteredItem.position}</h3>\n              <div className=\"single_v_row\">\n                <img \n                  className=\"single_v_pic\" \n                  src={picuri + (!filteredItem.business_area[0] ? 'software' : filteredItem.business_area) + '.svg'} \n                  alt={filteredItem.business_area} \n                />\n                <div className=\"single_v_right\">\n                  <p className=\"single_v_text\">{filteredItem.summary}</p>\n                </div>\n              </div>\n              <div className='vacancy-overview'>\n                <div className=\"vacancy-box blue\">\n                  <div className=\"vacancy-left\">          \n                    <p>Category</p>\n                    <p>Experience</p>\n                    <p>Salary</p>                    \n                  </div>       \n                  <div className=\"vacancy-right\">         \n                    <p>{filteredItem.business_area}</p>\n                    <p>{filteredItem.general_experience + ' years'}</p>\n                    <p>${filteredItem.salary}/hour</p>\n                  </div>\n                </div>\n                <div className=\"vacancy-box white\"> \n                  <div>\n                    <h3 className=\"vacancy-title\">Use technologies</h3>\n                    <img src={iconuri + filteredItem.technologies + '&perline=6'} className=\"skill-icon\" alt={'skills'} />                  \n                  </div>\n                </div>\n              </div>\n              <div className=\"timeline\">\n                <h3 className=\"timeline-name\">Work Experience</h3>\n                {\n                  filteredItem.work_experience.map((timeline,index) => (\n                    <div className='timeline-row' key={index}>\n                      <h4 className='timeline-date'><span>{timeline.begin}</span> - <span>{timeline.end}</span></h4>\n                      <div className='timeline-content'>\n                        <h4 className='timeline-title'><span style={{color: '#fff'}}>{timeline.position}</span></h4>                  \n                        <p className='timeline-text'>{timeline.description}</p>\n                      </div>                  \n                    </div>\n                  ))\n                }\n              </div>              \n              <div className=\"flex-center\" style={{marginTop: 80}}>         \n                <button\n                  className=\"button-get\"\n                  onClick={() => {\n                      setIsShow(true)\n                      setIsPersonShow(false)\n                    }\n                }>Back to find employee</button>                       \n                <button\n                  className=\"button-get yellow\"\n                  onClick={() => {}\n                }>Get this employee</button>   \n              </div>\n            </div>\n          )) : <></>\n        }       \n      </div>      \n    </section>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}