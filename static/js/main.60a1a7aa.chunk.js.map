{"version":3,"sources":["App.js","index.js"],"names":["App","goToTop","window","scrollTo","top","behavior","useState","vacancies","setVacancies","currentPage","setCurrentPage","totalPages","setTotalPages","fetchVacancies","dispatch","axios","get","then","res","data","results","useEffect","getVacancies","total_pages","current_page","className","map","item","index","position","length","slice","src","business_area","alt","general_experience","salary","technologies","summary","onClick","elements","i","push","getPages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA8GeA,EAvGH,WAEV,IAAMC,EAAU,WAChBC,OAAOC,SAAS,CACfC,IAAK,EACLC,SAAU,YAIX,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqCF,mBAAS,GAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAkBA,SAASC,IACP,OAAO,SAASC,GACdA,EAASP,KACTQ,IAAMC,IAAN,sEAAyEP,IACtEQ,MAAK,SAACC,GACLJ,EAASI,EAAIC,KAAKC,SAClBZ,EAAaU,EAAIC,KAAKC,aAkB9B,OAXAC,qBAAW,WACT,IAAMC,EAAY,iDAAG,8GACDP,IAAMC,IAAN,sEAAyEP,IADxE,OACbS,EADa,OAEnBV,EAAaU,EAAIC,KAAKC,SACtBR,EAAcM,EAAIC,KAAKI,aACvBb,EAAeQ,EAAIC,KAAKK,cAJL,2CAAH,qDAMlBF,MACC,CAACb,IAIF,yBAASgB,UAAU,OAAnB,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SACGlB,EAAUmB,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKH,UAAU,UAAf,UACE,gCACE,oBAAIA,UAAU,gBAAd,SAA+BE,EAAKE,SAASC,OAAS,GAAKH,EAAKE,SAASE,MAAM,EAAE,IAAM,OAASJ,EAAKE,WACrG,sBAAKJ,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAWO,IAlE7B,yCAkE6CL,EAAKM,cAAc,GAAkBN,EAAKM,cAAlB,YAAmC,OAAQC,IAAKP,EAAKM,gBACvH,sBAAKR,UAAU,aAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BE,EAAKQ,mBAAqB,WACpD,oBAAGV,UAAU,SAAb,cAAwBE,EAAKS,OAA7B,iBAGJ,sBAAKX,UAAU,eAAf,UACE,oBAAIA,UAAU,OAAd,uBACA,mBAAGA,UAAU,YAAb,SACE,qBAAKO,IAzET,kCAyEwBL,EAAKU,aAAaN,MAAM,EAAE,GAAIN,UAAU,aAAaS,IAAK,mBAIpF,8BACE,qBAAKT,UAAU,eAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BE,EAAKW,gBAnBPV,QAyBlC,sBAAKH,UAAU,cAAf,UACE,wBACEA,UAAWhB,EAAc,EAAI,GAAK,WAClC8B,QAAS,kBAAM9B,EAAc,GAC5BC,EAAeD,EAAc,GAC9BI,IAAkBZ,KAAaS,EAAeD,IAJhD,kBAvES,WAEf,IADA,IAAM+B,EAAW,GADI,WAEZC,GACPD,EAASE,KACN,sBAAMjB,UAAU,UAAhB,SAA0B,wBAEvBA,UAAWhB,IAAgBgC,EAAI,GAAK,WACpCF,QAAS,kBAAM9B,IAAgBgC,GAC9B/B,EAAe+B,GAChB5B,IAAkBZ,KAAaS,EAAeD,IALvB,SAMtBgC,EAAI,GAAJ,WAAaA,GAAMA,GALfA,OAHJA,EAAI,EAAGA,GAAK9B,EAAY8B,IAAM,EAA9BA,GAWT,OAAOD,EAgEAG,GACD,wBACElB,UAAWhB,EAAcE,EAAa,GAAK,WAC3C4B,QAAS,kBAAM9B,EAAcE,GAC5BD,EAAeD,EAAc,GAC9BI,IAAkBZ,KAAaS,EAAeD,IAJhD,2BC7FVmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.60a1a7aa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst picuri = 'https://emagweb.github.io/sdev/icons/'\n\nconst iconuri = 'https://skillicons.dev/icons?i='\n\nconst App = () => {\n\n  const goToTop = () => {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth',\n\t\t})\n\t}\n\n  const [vacancies, setVacancies] = useState([])\n  const [currentPage,setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n\n  const getPages = () => {\n    const elements = []\n    for (let i = 1; i <= totalPages; i++) {\n      elements.push(\n         <span className=\"v-pages\"><button\n            key={i}\n            className={currentPage !== i ? '' : 'noactive'}\n            onClick={() => currentPage !== i ? \n            (setCurrentPage(i), \n            fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n          }>{i < 10 ? `0${i}` : i}</button></span>\n      )\n    }\n    return elements\n  };\n\n  function fetchVacancies() {\n    return function(dispatch) {\n      dispatch(vacancies())\n      axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n        .then((res) => {\n          dispatch(res.data.results)\n          setVacancies(res.data.results)\n        })\n    }\n  }\n\n\n\n  useEffect (() => {    \n    const getVacancies = async () => {\n      const res = await axios.get(`https://backoffice.pogovorimo.com.ua/api/v1/applicant/?page=${currentPage}`)\n      setVacancies(res.data.results)\n      setTotalPages(res.data.total_pages)\n      setCurrentPage(res.data.current_page)\n    }\n    getVacancies()\n  }, [currentPage])\n\n\n  return (\n    <section className=\"page\">\n      <div className=\"features\">\n        <div className=\"feature-row\">\n          {vacancies.map((item, index) =>  (\n            <div className=\"feature\" key={index}>\n              <div>\n                <h3 className=\"feature-title\">{item.position.length > 21 ? item.position.slice(0,21) + ' ...' : item.position }</h3>\n                <div className=\"flex-row\">\n                  <img className=\"flex-pic\" src={picuri + (!item.business_area[0] ? 'software' : item.business_area) + '.svg'} alt={item.business_area} />\n                  <div className=\"flex-right\">\n                    <p className=\"bg-yellow\">{item.general_experience + ' years'}</p>\n                    <p className=\"salary\">${item.salary}/hour</p>\n                  </div>\n                </div>\n                <div className=\"skills-icons\">\n                  <h3 className=\"dark\">Expert In</h3>\n                  <p className=\"skillsets\">\n                    <img src={iconuri + item.technologies.slice(0,6)} className=\"skill-icon\" alt={'skills'} />\n                  </p>\n                </div>\n              </div>\n              <div>\n                <div className=\"feature-desc\">\n                  <p className=\"dark m-20\">{item.summary}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className='flex-center'>\n          <button  \n            className={currentPage > 1 ? '' : 'noactive'}\n            onClick={() => currentPage > 1 ? \n            (setCurrentPage(currentPage - 1), \n            fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n          }>Prev</button>\n          {getPages()}\n          <button \n            className={currentPage < totalPages ? '' : 'noactive'}\n            onClick={() => currentPage < totalPages ?\n            (setCurrentPage(currentPage + 1),\n            fetchVacancies(), goToTop()) : setCurrentPage(currentPage)\n          }>Next</button>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}